@page "/portfolio"
@inject IPortfolioService PortfolioService
@inject NavigationManager NavigationManager
@inject SomeClass someClass
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<PageTitle>Portfolio</PageTitle>
<h3>Portfolio Projects Overview</h3>

@if (projects.Count == 0)
{
	<p><em>Loading portfolio projects...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Title</th>
				<th>Description</th>
				<th>WebUrl</th>
				<th></th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach(var project in projects)
			{
				<tr>
					<td>@project.Title</td>
					<td>@project.Description</td>
					<td>@project.WebUrl</td>
					<td><button class="btn btn-primary" @onclick="@(() => EditProject(project.Id))">Edit</button></td>
					<td><button class="btn btn-primary" @onclick="@(() => DeleteProject(project.Id))">Delete</button></td>
				</tr>
			}
		</tbody>
	</table>

	<button @onclick="AddProject">Add a new project</button>
}

@code
{
	List<PortfolioProject> projects = new List<PortfolioProject>();
	private HttpResponseMessage response = new();

	protected override async Task OnInitializedAsync()
	{
		/*await Task.Delay(500);
		projects = await PortfolioService.GetAllProjectsAsync();*/

		var APIURL = someClass.GetApiUrl();
		HttpClient httpClient = new HttpClient();
		response = await httpClient.GetAsync(APIURL + "api/PortfolioProjects/");
		projects = JsonConvert.DeserializeObject<List<PortfolioProject>>(await response.Content.ReadAsStringAsync()) ?? new List<PortfolioProject>();
		httpClient.Dispose();
	}

	void EditProject(int id)
	{
		NavigationManager.NavigateTo($"/edit-project/{id}");
	}

	async Task DeleteProject(int id)
	{
		/*await PortfolioService.DeleteProjectAsync(id);
		projects = await PortfolioService.GetAllProjectsAsync();*/

		var APIURL = someClass.GetApiUrl();
		HttpClient httpClient = new HttpClient();
		response = await httpClient.DeleteAsync(APIURL + "api/PortfolioProjects/" + id);
		projects = JsonConvert.DeserializeObject<List<PortfolioProject>>(await response.Content.ReadAsStringAsync()) ?? new List<PortfolioProject>();
		httpClient.Dispose();
	}

	void AddProject()
	{
		NavigationManager.NavigateTo($"/edit-project");
	}
}
