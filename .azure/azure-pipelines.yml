# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

#parameters you need to change
parameters:
- name: AzureSubId # change to your azure subscription and subscription id 
  default: Azure Resource Manager # tempsubscriptionid
- name: ApiAppName # change to your azure api name
  default: tempapiappname
- name: WebAppName # change to your azure web app name
  default: tempwebappname

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:myblazor /t:myapi /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'terraform'
#     publishLocation: 'Container'
#
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: '${{ parameters.AzureSubId }}'
    backendAzureRmResourceGroupName: 'tempresourcenameResourcegroup'
    backendAzureRmStorageAccountName: 'tempstorageaccount'
    backendAzureRmContainerName: 'terraform'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: '${{ parameters.AzureSubId }}'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: '${{ parameters.AzureSubId }}'

- task: AzureCLI@2
  inputs:
    azureSubscription: '${{ parameters.AzureSubId }}'
    scriptType: 'ps'
    scriptLocation: 'scriptPath'
    scriptPath: 'scripts/refreshcloudips.ps1'

#Deploy web app
- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy Azure web app'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '${{ parameters.AzureSubId }}'
    #azureSubscription: 'testsubscription (8e4e96ed-7549-4b0c-9bd9-edbeed4c2f77)'
    appType: 'webApp'
    WebAppName: '${{ parameters.WebAppName }}'
    packageForLinux: 'D:\a\1\a\myblazor.zip'
    #D:\a\1\s\**\myblazor.zip
    #packageForLinux: '$(System.DefaultWorkingDirectory)/**/myblazor.zip'

#Deploy api app
- task: AzureRmWebAppDeployment@4
  displayName: 'Deploy Azure api app'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '${{ parameters.AzureSubId }}'
    appType: 'apiApp'
    WebAppName: '${{ parameters.ApiAppName }}'
    packageForLinux: 'D:\a\1\a\myapi.zip'


























