# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Fullstack to Azure - jgdapiapp/jgdwebapp

on:
  push:
    branches:
      - deploydb
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build myblazor --configuration Release

      - name: dotnet publish
        run: dotnet publish myblazor -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp
          retention-days: 1

  deploy-frontend:
    runs-on: windows-latest
    needs: [ syncdb ]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build-frontend job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'jgdwebapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_5526F4ADF1B1435CAACC9D7F1A62B1AC }}
          package: .

  build-backend:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'
          include-prerelease: true

      - name: Build with dotnet
        run: dotnet build myapi --configuration Release

      - name: dotnet publish
        run: dotnet publish myapi -c Release -o ${{env.DOTNET_ROOT}}/myapi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-api
          path: ${{env.DOTNET_ROOT}}/myapi
          retention-days: 1

  deploy-backend:
    runs-on: windows-latest
    needs: [ syncdb ]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-api

      - name: Deploy to Azure Api App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'jgdapiapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_4BB859ACE4BF43EBA292DF860146ED1D }}
          package: .

  syncdb:
    runs-on: windows-latest
    needs: [ build-backend , build-frontend ]
    
    steps:
      - uses: actions/checkout@v4

      - name: Install EF Core CLI
        run: dotnet tool install dotnet-ef --global
        shell: bash
      
      - name: Update db
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 2
          max_attempts: 5
          command: | 
            cd 'D:\a\mydotnet\mydotnet\myapi\'
            dotnet ef database update --connection '${{ secrets.CONNECTIONSTRING }}'
