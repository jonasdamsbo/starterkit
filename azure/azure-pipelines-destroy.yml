# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- destroy

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: CopyFiles@2
  displayName: Terraform Copy
  inputs:
    SourceFolder: 'terraform'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/terraform'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'scripts'
    Contents: '**'
    TargetFolder: '$(build.artifactstagingdirectory)/scripts'

- task: AzureCLI@2
  displayName: replace tokens
  inputs:
    azureSubscription: 'Azure Resource Manager'
    scriptType: 'ps'
    scriptLocation: 'scriptPath'
    scriptPath: '$(build.artifactstagingdirectory)/scripts/replacetokens.ps1'

- task: TerraformInstaller@1
  displayName: Terraform Install
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  displayName: 'Terraform: Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(build.artifactstagingdirectory)/terraform'
    backendServiceArm: 'Azure Resource Manager'
    backendAzureRmResourceGroupName: 'tempresourcenameresourcegroup'
    backendAzureRmStorageAccountName: 'tempstorageaccountname'
    backendAzureRmContainerName: 'tempterraformcontainername'
    backendAzureRmKey: 'terraform.tfstate'

- task: TerraformTaskV4@4
  displayName: Terraform Destroy
  inputs:
    provider: 'azurerm'
    command: 'destroy'
    workingDirectory: '$(build.artifactstagingdirectory)/terraform'
    environmentServiceNameAzureRM: 'Azure Resource Manager'
    commandOptions: '-auto-approve'